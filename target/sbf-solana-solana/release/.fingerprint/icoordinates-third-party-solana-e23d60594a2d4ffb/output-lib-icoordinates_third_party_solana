{"message":"reached the recursion limit while auto-dereferencing `common::ICoordinates`","code":{"code":"E0055","explanation":"During a method call, a value is automatically dereferenced as many times as\nneeded to make the value's type match the method's receiver. The catch is that\nthe compiler will only attempt to dereference a number of times up to the\nrecursion limit (which can be set via the `recursion_limit` attribute).\n\nFor a somewhat artificial example:\n\n```compile_fail,E0055\n#![recursion_limit=\"4\"]\n\nstruct Foo;\n\nimpl Foo {\n    fn foo(&self) {}\n}\n\nfn main() {\n    let foo = Foo;\n    let ref_foo = &&&&&Foo;\n\n    // error, reached the recursion limit while auto-dereferencing `&&&&&Foo`\n    ref_foo.foo();\n}\n```\n\nOne fix may be to increase the recursion limit. Note that it is possible to\ncreate an infinite recursion of dereferencing, in which case the only fix is to\nsomehow break the recursion.\n"},"level":"error","spans":[{"file_name":"programs/icoordinates-third-party-solana/src/instructions/integrate_third_party_controller.rs","byte_start":80,"byte_end":88,"line_start":4,"line_end":4,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":"deref recursion limit reached","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"programs/icoordinates-third-party-solana/src/instructions/integrate_third_party_controller.rs","byte_start":80,"byte_end":88,"line_start":4,"line_end":4,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"#[derive(Accounts)]","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Accounts)]","def_site_span":{"file_name":"/Users/ruiyangzhang/.cargo/registry/src/github.com-1ecc6299db9ec823/anchor-derive-accounts-0.28.0/src/lib.rs","byte_start":29231,"byte_end":29297,"line_start":633,"line_end":633,"column_start":1,"column_end":67,"is_primary":false,"text":[{"text":"pub fn derive_anchor_deserialize(item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`icoordinates_third_party_solana`)","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0055]\u001b[0m\u001b[0m\u001b[1m: reached the recursion limit while auto-dereferencing `common::ICoordinates`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mprograms/icoordinates-third-party-solana/src/instructions/integrate_third_party_controller.rs:4:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Accounts)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mderef recursion limit reached\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`icoordinates_third_party_solana`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0055`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0055`.\u001b[0m\n"}
